# OS
if [ -f /etc/arch-release ]; then
	export DOT_OS="arch"
elif [ -f /etc/fedora-release ]; then
	export DOT_OS="fedora"
elif [ -f /etc/os-release ]; then
	export DOT_OS=$(grep '^NAME=' /etc/os-release | awk -F '=' '{ print tolower($2) }')
else
	if [ -x /usr/bin/lsb_release ]; then
		export DOT_OS=$(lsb_release -d | awk '{ print tolower($2) }')
	else
		export DOT_OS="generic"
	fi
fi

# ENV
if [ -d /run/WSL ]; then
	export DOT_ENV="WSL"
else
	export DOT_ENV="generic"
fi

# SHELL
if [ -z $DOT_SHELL ]; then
	export DOT_SHELL=$SHELL
fi

# HOSTNAME
export DOT_HOSTNAME=$HOSTNAME
if [ ! -z $SSH_TTY ]; then
	export DOT_SSH=yes
	export DOT_SSH_HOSTNAME=$DOT_HOSTNAME
fi

# atomic location of the dotfiles
export DOT_HOME=$HOME/.dotfiles

# atomic location of the dotfiles bin directory
export DOT_BIN=$DOT_HOME/bin

# atomic location of .dotrc
export DOT_RC=$HOME/.dotrc

# source global definitions
if [ -f /etc/bashrc ]; then
	. /etc/bashrc
fi

# source in original codespaces .bashrc
if [ -f ~/.codespacesrc ]; then
	. ~/.codespacesrc
fi

# source early definitions
if [ -f $DOT_RC ]; then
	. $DOT_RC
fi

# source every .bsh file
for config_file in $(find $DOT_HOME -name "*.bsh" -print);
do
	. $config_file
done

# source private definitions
if [ -f ~/.localrc ]; then
    . ~/.localrc
fi

# add ~/bin if the directory exists
if [ -d ~/bin ]; then
	export PATH=$HOME/bin:$PATH
fi

# add /opt/bin if the directory exists
if [ -d /opt/bin ]; then
	export PATH=/opt/bin:$PATH
fi

# add DOT_BIN, Miniconda and Cargo
export PATH=$HOME/.miniconda2/bin:$HOME/.miniconda3/bin:$HOME/.cargo/bin:$DOT_BIN:$PATH

# add RVM to PATH
export PATH="$PATH:$HOME/.rvm/bin"

# add Bun to PATH
export BUN_INSTALL="$HOME/.bun"
export PATH=$BUN_INSTALL/bin:$PATH

# source in Cargo ENV
if [ -f ~/.cargo/env ]; then
	. ~/.cargo/env
fi
