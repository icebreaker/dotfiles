" options
set nospell
set encoding=utf8
set fileencoding=utf8
set selectmode=key
set nowrap
set complete-=i
set fileformats=unix,mac,dos
set nocp
set keymodel=startsel
set novisualbell
set number
set report=0
set nolazyredraw
set ttyfast
set autoindent
set cindent
set smartindent
set smartcase
set noexpandtab
set tabstop=4
set shiftwidth=4
set softtabstop=4
set cursorline
set smarttab
set showmatch
set nohlsearch
set incsearch
set nocompatible
set backspace=indent,eol,start
set diffopt+=iwhite
set hidden
set nostartofline
set shortmess=atsI
set noshowcmd
set ignorecase
set mouse-=a
set ruler
set nofsync
set clipboard=exclude:.*
set cinoptions+=g0
set foldmethod=marker
set cryptmethod=blowfish2

" netrw
let g:netrw_banner=0
let g:netrw_fastbrowse=1

" swap and undo
set history=1000
set undodir=~/.vimundo
set undolevels=1000
set undofile
set directory=~/.vimswap

" make and grep
set errorformat^=%-GIn\ file\ included\ %.%#
set grepprg=grep.sh
set makeprg=make.sh

nnoremap <C-b> :make build<CR>
nnoremap <C-r> :make execute<CR>
nnoremap <C-k> :make clean<CR>
nnoremap <C-g> :make generate<CR>

" quality of life
set pastetoggle=<F3>
nnoremap <F2> :set nonumber!<CR>
nnoremap <F4> :set spell! spelllang=en_us<CR>
nnoremap <F5> :set hlsearch!<CR>

vnoremap <C-c> :w! ~/.vimswap/.buffer<CR>
nnoremap <C-p> :r ~/.vimswap/.buffer<CR>

nnoremap r :redo<CR>
nnoremap ; :
inoremap jj <ESC>

nnoremap <Leader>w :w<CR>
nnoremap <Leader>= <C-a>
nnoremap <Leader>- <C-x>

nnoremap zz ZZ
nnoremap zq ZQ

nnoremap q <nop>

augroup qol
	au!
	au BufReadPost * if line("'\"") > 1 && line("'\"") <= line("$") | exec "normal! g'\"" | endif
	au BufWritePre * silent exec '%s/\s\+$//e'
augroup end

" syntax and colorscheme
set t_AB=^[[48;5;%dm
set t_AF=^[[38;5;%dm
set t_Co=256
set term=xterm-256color

if $TMUX =~ 'tmux'
	set term=xterm-256color
	nmap  <Home>
	imap  <Home>
	vmap  <Home>
	nmap  <End>
	imap  <End>
	vmap  <End>
endif

syntax on
syntax sync fromstart
filetype on
filetype plugin on
filetype plugin indent on
filetype indent on

set synmaxcol=150

let python_highlight_all=1
let c_no_curly_error=1
let coffee_no_reserved_words_error=1
let g:delimitMate_expand_cr=1

if has('gui_running')
	set guifont=IBM\ Plex\ Mono\ SemiBold\ 19
	set guicursor+=a:blinkon0
	set guioptions=i
endif

let g:html_font='IBM Plex Mono Medium'

if has('gui_running')
	colorscheme gummybears
else
	set background=dark
	colorscheme monoplex
endif

" color column and basic distraction free writing for markdown
hi ColorColumn ctermbg=124 ctermfg=NONE cterm=BOLD
function! AddColorColumn() abort
	if &buftype == 'help'
		return
	endif

	if exists('s:colorcolumn')
		call matchdelete(s:colorcolumn)
	endif

	if &ft == 'markdown'
		set tw=80
		set nonumber
		let s:colorcolumn = matchadd('ColorColumn', '\%80v', 100)
	else
		let s:colorcolumn = matchadd('ColorColumn', '\%120v', 100)
	endif
endfunction

augroup colorcol
	au!
	au BufRead,BufNewFile * call AddColorColumn()
augroup end

" status line
function! GitStatus()
	let s = fugitive#head()

	if empty(s)
		return s
	else
		return '  ' . s . ' |'
	endif
endfunction

set laststatus=2
set statusline =%{GitStatus()}
set statusline+=\ %F
set statusline+=%=
set statusline+=%{''.(&fenc!=''?&fenc:&enc).''}
set statusline+=\ \|
set statusline+=\ %{&ff}
set statusline+=\ \|
set statusline+=\ %04v:%04l\ \|\ %04L
set statusline+=%{'\ '}

" word and code completion
set completeopt=menu,menuone
set pumheight=10

function! TabOrComplete()
	if col('.') > 1 && strpart(getline('.'), col('.')-2, 3) =~ '^\w'
		return "\<C-N>"
	else
		return "\<Tab>"
	endif
endfunction
inoremap <Tab> <C-R>=TabOrComplete()<CR>
inoremap <C-@> <C-X><C-U>

" file navigation
let g:fastopen_git_aware = 1
let g:fastopen_filter_cmd = "exclude.sh"
nnoremap <C-l> :call fastopen#show('argedit')<cr>

function! NextFile()
	if bufname('%') != ''
		execute 'try | n | catch | try | rew | catch | | endtry | endtry'
	endif
endfunction

function! PrevFile()
	if bufname('%') != ''
		execute 'try | prev | catch | try | la | catch | | endtry | endtry'
	endif
endfunction

function! CloseFile()
	if &modified && confirm('File modified. Are you sure?', "&Yes\n&No") == 2
		return
	endif

	if bufname('%') == ''
		if &modified
			silent q!
		else
			q
		end
	else
		silent! argdel %
		if &modified
			silent bd!
		else
			bd
		endif

		if bufname('%') == ''
			silent q!
		endif
	endif
endfunction

noremap <Leader>] :call NextFile()<CR>
noremap <Leader>[ :call PrevFile()<CR>
noremap <Leader>q :call CloseFile()<CR>

let src = substitute(substitute(expand('%:p:h'), '\/src.*$', '', '') . '/src', ' ', '\\ ', 'g')
execute 'set path+=' . src
execute 'set path+=/usr/include/SDL2'
execute 'set path+=/usr/include'

let src = substitute(substitute(expand('%:p:h'), '\/data.*$', '', '') . '/data', ' ', '\\ ', 'g')
execute 'set path+=' . src

set wildignore+=.svn/*,.git/*,.hg/*,bin/*,build/*,src_data/*,data/assets/*,resources/*,src/vendor/*
set wildmenu

" rubocop
let g:vimrubocop_keymap = 0
nnoremap <Leader>c :RuboCop<CR>

" customized async totem for `makeprg`, `grepprg` and the like
let g:asynctotem_copen = 0
let g:asynctotem_cclose_delay = 0
let g:asynctotem_cclose_on_kill = 1
let g:asynctotem_cclose_on_no_errors = 1

function! Acopen()
	if g:asynctotem_copen == 0
		let g:asynctotem_cclose_on_kill = 0
		let g:asynctotem_cclose_on_no_errors = 0
		let g:asynctotem_copen = 1
		copen
	else
		let g:asynctotem_cclose_on_kill = 1
		let g:asynctotem_cclose_on_no_errors = 1
		let g:asynctotem_copen = 0
		cclose
	endif
endfunction

function! Acclose()
	let g:asynctotem_copen = 1
	call Acopen()
endfunction

augroup asynctotem
	au!
	au BufReadPost quickfix silent exec 'nnoremap q :call Acclose()<CR>'
augroup end

noremap <Leader>e :call asynctotem#run(&makeprg, 'build')<CR>
noremap <Leader>r :call asynctotem#run(&makeprg, 'execute')<CR>
noremap <Leader>k :call asynctotem#run(&makeprg, 'clean')<CR>
noremap <Leader>g :call asynctotem#run(&makeprg, 'generate')<CR>
noremap <Leader>f :call Acopen()<CR>

command! -nargs=+ -complete=shellcmd Arun call asynctotem#run(<q-args>)
command! -nargs=+ -complete=shellcmd Agrep call asynctotem#run(&grepprg, <q-args>)

" wiki
command! Wiki e ~/.wiki/README.md

function! WikiJump()
	call search('\.md)$', 'c', getline('.'))
	normal! gf
endfunction

augroup wiki
	au!
	au BufNewFile,BufRead ~/.wiki/*.md silent exec 'nnoremap <Tab> :call WikiJump()<CR>'
augroup end

" task/todo
nnoremap - :call gustav#add()<CR>
nnoremap <Space> :call gustav#toggle()<CR>

" templating
augroup templating
	au!
	au BufNewFile *.rb silent! exec '0r ~/.vim/templates/template.rb'
augroup end
nnoremap <Leader>t :. !template.sh '%:t' '%:p:h'<CR>

" file types
augroup filetypes
	au!
	au BufRead,BufNewFile * set formatoptions=tcq
	au BufRead,BufNewFile *.glsl,*.shader,*.shd set filetype=glsl
	au BufRead,BufNewFile *.CPP,*.H set filetype=cpp
	au BufRead,BufNewFile *.ASM set filetype=asm
	au BufRead,BufNewFile *.mm,*.m set filetype=objc
	au BufRead,BufNewFile Trollfile,Buildfile set filetype=lua
	au BufRead,BufNewFile *.me,*.symlink,*.bsh,*.localrc set filetype=sh
	au BufRead,BufNewFile *.as set filetype=actionscript
	au BufRead,BufNewFile Gemfile set syntax=off tabstop=2 shiftwidth=2 softtabstop=2 expandtab noeol
	au BufRead,BufNewFile Dockerfile,Jenkinsfile set tabstop=2 shiftwidth=2 softtabstop=2 expandtab noeol
	au BufRead,BufNewFile Rakefile,Gemfile set filetype=ruby tabstop=2 shiftwidth=2 softtabstop=2 expandtab noeol
	au BufRead,BufNewFile *.ru set filetype=ruby tabstop=2 shiftwidth=2 softtabstop=2 expandtab noeol
	au BufRead,BufNewFile *.rb set filetype=ruby tabstop=2 shiftwidth=2 softtabstop=2 expandtab noeol
	au BufRead,BufNewFile *.cr set tabstop=2 shiftwidth=2 softtabstop=2 expandtab noeol
	au BufRead,BufNewFile *.conf set tabstop=4 shiftwidth=4 softtabstop=4 expandtab
	au BufRead,BufNewFile .irbrc set filetype=ruby tabstop=2 shiftwidth=2 softtabstop=2 expandtab noeol
	au BufRead,BufNewFile *.erb set tabstop=2 shiftwidth=2 softtabstop=2 expandtab noeol
	au BufRead,BufNewFile *.haml,*.hamlc set filetype=haml tabstop=2 shiftwidth=2 softtabstop=2 expandtab noeol
	au BufRead,BufNewFile *.sass set filetype=sass tabstop=2 shiftwidth=2 softtabstop=2 expandtab noeol
	au BufRead,BufNewFile *.scss set filetype=sass tabstop=2 shiftwidth=2 softtabstop=2 expandtab noeol
	au BufRead,BufNewFile *.yml,*.yaml set filetype=yaml tabstop=2 shiftwidth=2 softtabstop=2 expandtab noeol
	au BufRead,BufNewFile Doxterfile set filetype=yaml tabstop=2 shiftwidth=2 softtabstop=2 expandtab noeol
	au BufRead,BufNewFile *.rake,*.gemspec,*.js,*.jsx set tabstop=2 shiftwidth=2 softtabstop=2 expandtab noeol
	au BufRead,BufNewFile *.feature,*.xml set tabstop=2 shiftwidth=2 softtabstop=2 expandtab noeol
	au BufRead,BufNewFile *.install,*.inc set filetype=php tabstop=4 shiftwidth=4 softtabstop=4 noexpandtab noeol
	au BufRead,BufNewFile *.php tabstop=4 shiftwidth=4 softtabstop=4 noexpandtab noeol
	au BufRead,BufNewFile *.rst set tabstop=3 shiftwidth=3 softtabstop=3 expandtab
	au BufRead,BufNewFile Cakefile set tabstop=2 shiftwidth=2 softtabstop=2 expandtab noeol
	au BufRead,BufNewFile *.coffee,*.feature,*.jsx set tabstop=2 shiftwidth=2 softtabstop=2 expandtab noeol
	au BufRead,BufNewFile *.ninja set tabstop=2 shiftwidth=2 softtabstop=2 expandtab noeol
	au BufRead,BufNewFile *.lua,Trollfile,Buildfile,*.lud set tabstop=2 shiftwidth=2 softtabstop=2 noexpandtab noeol
	au BufRead,BufNewFile *.hx set filetype=haxe tabstop=2 shiftwidth=2 softtabstop=2 expandtab
	au BufRead,BufNewFile *cms-plugins*/*joomla*/*.php set filetype=php
		\ tabstop=2 shiftwidth=2 softtabstop=2 expandtab noeol
augroup end
