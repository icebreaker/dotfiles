" Custom make wrapper which can search for a valid Makefile.
set makeprg=make.sh
set errorformat^=%-GIn\ file\ included\ %.%#
" Bind Ctrl+B to make
map <c-b> <ESC>:make build<CR>
" Bind Ctrl+R to execute
map <c-r> <ESC>:make execute<CR>
" Bind Ctrl+Q to clean
map <c-k> <ESC>:make clean<CR>
" Bind Ctrl+G to generate
map <c-g> <ESC>:make generate<CR>
" Toggle Spell checking
map <F4> :set spell! spelllang=en_us<CR>
" Toggle Line Numbers
map <F2> :set nonumber!<CR>

" Copy Paste with Ctrl+C and Ctrl+V
vmap <c-c> :w! ~/.vim/swap/.buffer<CR>
nmap <c-p> :r ~/.vim/swap/.buffer<CR>

" Next / Prev File (as in :args)
:noremap <Leader>] :n<CR>
:noremap <Leader>[ :prev<CR>

:noremap <Leader>n :n<CR>
:noremap <Leader>p :prev<CR>

" Highlight Last Searched Term
:noremap <space> :set hlsearch!<CR>

" Shortcut for Redo
:noremap r :redo<CR>

set nospell
set encoding=utf8
set fileencoding=utf8
set selectmode=key
set nowrap
set complete-=i
set wildmenu
set fileformats=unix,mac,dos
set nocp
set keymodel=startsel
set laststatus=2
set novisualbell
set number
set report=0
set nolazyredraw
set ttyfast
set listchars=tab:\|\ ,trail:.,extends:>,precedes:<,eol:$ 
set autoindent
set cindent
set smartindent
set smartcase
set noexpandtab
set tabstop=4
set shiftwidth=4
set softtabstop=4
set cursorline
set smarttab
set showmatch
set nohlsearch
set incsearch
set nocompatible
set backspace=indent,eol,start
set diffopt+=iwhite
set hidden
set nostartofline
set shortmess=atsI
set noshowcmd
set ignorecase
"set mouse=a
set columns=100
"set colorcolumn=100
"set tw=99
set ruler
set undolevels=500
set history=1000
set nofsync
set clipboard+=unnamed
set cinoptions+=g0
set foldmethod=marker

let python_highlight_all=1

syntax on
syntax sync fromstart
filetype on
filetype plugin on
filetype plugin indent on
filetype indent on

set t_AB=^[[48;5;%dm
set t_AF=^[[38;5;%dm
set t_Co=256
"set term=gnome-256color
set term=xterm-256color

let g:CSApprox_attr_map = { 'bold' : 'bold', 'italic' : '', 'sp' : ''  }

if has("gui_running")
	set guifont=Meslo\ LG\ M\ for\ Powerline\ 17
	set guicursor+=a:blinkon0
	set guioptions=i
endif

set completeopt=menu,menuone
set pumheight=10

let g:Powerline_symbols = 'fancy'
let g:Powerline_mode_v	= 'V'
let g:Powerline_mode_V	= 'V⋅L'
let g:Powerline_mode_cv = 'V⋅B'
let g:Powerline_mode_s	= 'S'
let g:Powerline_mode_S	= 'S⋅L'
let g:Powerline_mode_cs = 'S⋅B'
let g:Powerline_mode_i	= 'I'
let g:Powerline_mode_R	= 'R'
let g:Powerline_mode_n	= 'N'

let g:clang_c_options = '-ansi'
let g:clang_cpp_options = '-ansi'
let g:clang_diagsopt = ''

let g:solarized_italic=0
let g:solarized_termcolors=256
"let g:solarized_termtrans = 1

"set background=dark
"colorscheme base16-default
colorscheme gummybears

"let g:hybrid_use_Xresources = 1
"colorscheme hybrid
"colorscheme iceberg
"colorscheme candyVirus
"colorscheme mango
"colorscheme obsidian2

hi Normal ctermbg=none
hi Normal ctermfg=251
hi NonText ctermbg=none
hi Search cterm=none ctermfg=1 ctermbg=172
hi Todo ctermbg=none ctermfg=107
hi ColorColumn ctermbg=107 ctermfg=1

call matchadd('ColorColumn', '\%100v', 100)

" Word Completion
function! Tab_Or_Complete()
	if col('.') > 1 && strpart(getline('.'), col('.')-2, 3) =~ '^\w'
		return "\<C-N>"
	else
		return "\<Tab>"
	endif
endfunction
inoremap <Tab> <C-R>=Tab_Or_Complete()<CR>
inoremap <C-@> <C-X><C-U>

" File Types
au! BufRead,BufNewFile *.json set filetype=json
au! BufRead,BufNewFile *.as set filetype=actionscript
au! BufRead,BufNewFile Rakefile,Gemfile set filetype=ruby tabstop=2 shiftwidth=2 softtabstop=2 expandtab noeol
au! BufRead,BufNewFile *.ru set filetype=ruby tabstop=2 shiftwidth=2 softtabstop=2 expandtab noeol
au! BufRead,BufNewFile *.rb set filetype=ruby tabstop=2 shiftwidth=2 softtabstop=2 expandtab noeol
au! BufRead,BufNewFile *.conf set tabstop=4 shiftwidth=4 softtabstop=4 expandtab
au! BufRead,BufNewFile .irbrc set filetype=ruby tabstop=2 shiftwidth=2 softtabstop=2 expandtab noeol
au! BufRead,BufNewFile *.erb set tabstop=2 shiftwidth=2 softtabstop=2 expandtab noeol
au! BufRead,BufNewFile *.haml,*.hamlc set filetype=haml tabstop=2 shiftwidth=2 softtabstop=2 expandtab noeol
au! BufRead,BufNewFile *.sass set filetype=sass tabstop=2 shiftwidth=2 softtabstop=2 expandtab noeol
au! BufRead,BufNewFile *.scss set filetype=sass tabstop=2 shiftwidth=2 softtabstop=2 expandtab noeol
au! BufRead,BufNewFile *.yml,*.yaml,Doxterfile set filetype=yaml tabstop=2 shiftwidth=2 softtabstop=2 expandtab noeol
au! BufRead,BufNewFile *.rake,*.gemspec,*.js set tabstop=2 shiftwidth=2 softtabstop=2 expandtab noeol
au! BufRead,BufNewFile *.install set filetype=php
au! BufRead,BufNewFile *.inc set filetype=php
au! BufRead,BufNewFile *.php set filetype=php
au! BufRead,BufNewFile *.rst set tabstop=3 shiftwidth=3 softtabstop=3 expandtab
au! BufRead,BufNewFile *.me,*.symlink,*.bsh,*.localrc call SetFileTypeSH("bash")
au! BufRead,BufNewFile *.py set filetype=python
au! BufRead,BufNewFile Cakefile set tabstop=2 shiftwidth=2 softtabstop=2 expandtab noeol
au! BufRead,BufNewFile *.coffee set tabstop=2 shiftwidth=2 softtabstop=2 expandtab noeol
au! BufRead,BufNewFile *.lua set tabstop=2 shiftwidth=2 softtabstop=2 expandtab
au! BufRead,BufNewFile *.hx set filetype=haxe tabstop=2 shiftwidth=2 softtabstop=2 expandtab
au! BufRead,BufNewFile *.glsl set filetype=glsl
au! BufRead,BufNewFile *.CPP set filetype=cpp
au! BufRead,BufNewFile *.md,*.markdown,*.mkd call DistractionFreeWriting()
au! BufRead,BufNewFile Gemfile set syntax=off tabstop=2 shiftwidth=2 softtabstop=2 expandtab noeol
au! BufRead,BufNewFile * set formatoptions=tcq

function! DistractionFreeWriting()
	set tabstop=2 shiftwidth=2 softtabstop=2 expandtab
	set laststatus=0
	set noruler
	set linebreak
	set nonumber
"	set foldcolumn=10
"	set columns=80
"	set colorcolumn=80
"	set tw=79
	set noshowmode 
	
	hi FoldColumn ctermbg=none
	hi clear SpellBad
	hi SpellBad term=standout ctermfg=1 term=none cterm=none
	hi clear SpellCap
	hi SpellCap term=standout ctermfg=2 term=none cterm=none
	hi clear SpellLocal
	hi SpellLocal term=standout ctermfg=3 term=none cterm=none
	hi clear SpellRare
	hi SpellRare term=standout ctermfg=4 term=none cterm=none
	
"	call matchadd('ColorColumn', '\%80v', 80)
endfunction

" Swap Directory
set directory=~/.vim/swap

" Restore / Jump to last position
if has("autocmd")
  au BufReadPost * if line("'\"") > 1 && line("'\"") <= line("$") | exe "normal! g'\"" | endif
endif

" VisualBlock plugin
vmap  <expr>  <C-LEFT>   DVB_Drag('left')
vmap  <expr>  <C-RIGHT>  DVB_Drag('right')
vmap  <expr>  <C-DOWN>   DVB_Drag('down')
vmap  <expr>  <C-UP>     DVB_Drag('up') 

nnoremap ; :

let g:fastopen_filter_cmd = "exclude.sh"
map <c-l> :call fastopen#show('argedit')<cr>

" RuboCop
let g:vimrubocop_keymap = 0
nmap <Leader>r :RuboCop<CR>

" CodeClimate
nmap <Leader>ao :CodeClimateAnalyzeOpenFiles<CR>

let g:delimitMate_expand_cr=1

map <c-F12> :!yapvp '%' --expandsrc > /tmp/yapvp.html; xdg-open /tmp/yapvp.html<CR>

" Append the src directory to the path
let src = substitute(substitute(expand('%:p:h'), '\/src.*$', '', '') . '/src', ' ', '\\ ', 'g')
execute 'set path+=' . src
